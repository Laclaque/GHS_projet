        D envoie à C : (connect, 0, None, None) ...
--------
Set state :
i : D
testcan : None
nom : None
pere : None
etat : found
f_ : RAPPORT_txtGcours2__150620_1522_nodeD.txt
edges : {'A': 4, 'B': 3, 'C': 1}
recu : 0
mpoids : 0.1
canal : {'A': 'basic', 'B': 'basic', 'C': 'branch'}
mcan : None
niv : 0
--------

D recoit de C : (connect, 0, None, None) ...
        D envoie à C : (initiate, 1, 1, find) ...
D recoit de C : (initiate, 1, 1, find) ...
        niv : 0 --> 1
        nom : None --> 1
        etat : found --> find
        pere : None --> C
        mcan : None --> None
        mpoids : 0.1 --> inf
        recu : 0 --> 0
        -- Procedure TEST --
        testcan : None --> B
        D envoie à B : (test, 1, 1, None) ...
        -- Fin procedure TEST --
D recoit de A : (test, 1, 2, None) ...
        D envoie à A : (accept, None, None, None) ...
D recoit de B : (test, 1, 2, None) ...
        D envoie à B : (accept, None, None, None) ...
D recoit de C : (report, 5, None, None) ...
        C envoie à D : (report, 5, None, None) ...
D recoit de C : (report, 5, None, None) ...
        C envoie à D : (report, 5, None, None) ...
D recoit de B : (accept, None, None, None) ...
        testcan : B --> None
        mpoids : inf --> 3
        mcan : None --> B
        - Procedure REPORT -
        etat : find --> found
        D envoie à C : (report, 3, None, None) ...
        - Fin procedure REPORT -
D recoit de B : (connect, 1, None, None) ...
        B envoie à D : (connect, 1, None, None) ...
D recoit de C : (report, 5, None, None) ...
        --- Procedure CHANGEROOT ---
        D envoie à B : (connect, 1, None, None) ...
        canal[B] : basic --> branch
        --- Fin procedure CHANGEROOT ---
D recoit de B : (connect, 1, None, None) ...
        D envoie à B : (initiate, 2, 3, find) ...
D recoit de B : (initiate, 2, 3, find) ...
        niv : 1 --> 2
        nom : 1 --> 3
        etat : found --> find
        pere : C --> B
        mcan : B --> None
        mpoids : 3 --> inf
        D envoie à C : (initiate, 2, 3, find) ...
        recu : 0 --> 0
        -- Procedure TEST --
        testcan : None --> A
        D envoie à A : (test, 2, 3, None) ...
        -- Fin procedure TEST --
D recoit de A : (test, 2, 3, None) ...
        canal[A] : basic --> reject
        -- Procedure TEST --
        testcan : A --> None
        - Procedure REPORT -
        - Fin procedure REPORT -
        -- Fin procedure TEST --
D recoit de B : (report, inf, None, None) ...
        B envoie à D : (report, inf, None, None) ...
D recoit de C : (report, inf, None, None) ...
        recu : 0 --> 1
        - Procedure REPORT -
        etat : find --> found
        D envoie à B : (report, inf, None, None) ...
        - Fin procedure REPORT -
D recoit de B : (report, inf, None, None) ...
D recoit de father : (termine, None, None, None) ...
--------
Set state :
i : D
testcan : None
nom : 3
pere : B
etat : found
f_ : RAPPORT_txtGcours2__150620_1522_nodeD.txt
edges : {'A': 4, 'B': 3, 'C': 1}
recu : 1
mpoids : inf
canal : {'A': 'reject', 'B': 'branch', 'C': 'branch'}
mcan : None
niv : 2
--------

