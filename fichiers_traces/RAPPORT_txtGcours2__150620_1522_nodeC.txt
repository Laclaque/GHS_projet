        C envoie à D : (connect, 0, None, None) ...
--------
Set state :
i : C
testcan : None
nom : None
pere : None
etat : found
f_ : RAPPORT_txtGcours2__150620_1522_nodeC.txt
edges : {'B': 5, 'D': 1}
recu : 0
mpoids : 0.1
canal : {'B': 'basic', 'D': 'branch'}
mcan : None
niv : 0
--------

C recoit de D : (connect, 0, None, None) ...
        C envoie à D : (initiate, 1, 1, find) ...
C recoit de D : (initiate, 1, 1, find) ...
        niv : 0 --> 1
        nom : None --> 1
        etat : found --> find
        pere : None --> D
        mcan : None --> None
        mpoids : 0.1 --> inf
        recu : 0 --> 0
        -- Procedure TEST --
        testcan : None --> B
        C envoie à B : (test, 1, 1, None) ...
        -- Fin procedure TEST --
C recoit de B : (accept, None, None, None) ...
        testcan : B --> None
        mpoids : inf --> 5
        mcan : None --> B
        - Procedure REPORT -
        etat : find --> found
        C envoie à D : (report, 5, None, None) ...
        - Fin procedure REPORT -
C recoit de D : (report, 3, None, None) ...
C recoit de B : (test, 2, 3, None) ...
        B envoie à C : (test, 2, 3, None) ...
C recoit de D : (initiate, 2, 3, find) ...
        niv : 1 --> 2
        nom : 1 --> 3
        etat : found --> find
        pere : D --> D
        mcan : B --> None
        mpoids : 5 --> inf
        recu : 0 --> 0
        -- Procedure TEST --
        testcan : None --> B
        C envoie à B : (test, 2, 3, None) ...
        -- Fin procedure TEST --
C recoit de B : (test, 2, 3, None) ...
        canal[B] : basic --> reject
        -- Procedure TEST --
        testcan : B --> None
        - Procedure REPORT -
        etat : find --> found
        C envoie à D : (report, inf, None, None) ...
        - Fin procedure REPORT -
        -- Fin procedure TEST --
C recoit de father : (termine, None, None, None) ...
--------
Set state :
i : C
testcan : None
nom : 3
pere : D
etat : found
f_ : RAPPORT_txtGcours2__150620_1522_nodeC.txt
edges : {'B': 5, 'D': 1}
recu : 0
mpoids : inf
canal : {'B': 'reject', 'D': 'branch'}
mcan : None
niv : 2
--------

