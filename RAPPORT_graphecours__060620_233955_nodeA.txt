
----------------------
Set final :
canal : {'D': 'branch', 'B': 'basic'}
recu : 0
f_ : RAPPORT_graphecours__060620_233955_nodeA.txt
edges : {'D': 3, 'B': 4}
niv : 0
pere : None
mpoids : 0.1
testcan : None
mcan : None
queues : {'D': <multiprocessing.queues.SimpleQueue object at 0x7f1232153d68>, 'C': <multiprocessing.queues.SimpleQueue object at 0x7f1233960cc0>, 'B': <multiprocessing.queues.SimpleQueue object at 0x7f1232153be0>, 'A': <multiprocessing.queues.SimpleQueue object at 0x7f1232ad5e80>, 'father': <multiprocessing.queues.SimpleQueue object at 0x7f1232153ef0>}
etat : found
i : A
nom : None
        A envoie à D : (connect, 0, None, None) ...
A recoit de D : (test, 1, 1, None) ...
        D envoie à A : (test, 1, 1, None) ...
A recoit de D : (initiate, 1, 1, find) ...
        niv : 0 --> 1
        nom : None --> 1
        etat : found --> find
        pere : None --> D
        mcan : None --> None
        mpoids : 0.1 --> inf
        recu : 0 --> 0
        testcan : None --> B
        A envoie à B : (test, 1, 1, None) ...
A recoit de D : (test, 1, 1, None) ...
        A envoie à D : (reject, None, None, None) ...
A recoit de B : (reject, None, None, None) ...
        canal[B] : basic --> reject
        testcan : B --> None
        etat : find --> found
        A envoie à D : (report, inf, None, None) ...
A recoit de father : (termine, None, None, None) ...

----------------------
Set final :
canal : {'D': 'branch', 'B': 'reject'}
recu : 0
f_ : RAPPORT_graphecours__060620_233955_nodeA.txt
edges : {'D': 3, 'B': 4}
niv : 1
pere : D
mpoids : inf
testcan : None
mcan : None
queues : {'D': <multiprocessing.queues.SimpleQueue object at 0x7f1232153d68>, 'C': <multiprocessing.queues.SimpleQueue object at 0x7f1233960cc0>, 'B': <multiprocessing.queues.SimpleQueue object at 0x7f1232153be0>, 'A': <multiprocessing.queues.SimpleQueue object at 0x7f1232ad5e80>, 'father': <multiprocessing.queues.SimpleQueue object at 0x7f1232153ef0>}
etat : found
i : A
nom : 1
